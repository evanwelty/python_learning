import requests
from datetime import datetime
from dateutil.parser import isoparse
import time as t
import smtplib
import ssl
import certifi
import time

MY_EMAIL = "evn.erl.wlty@gmail.com"
PASSWORD = "***************"
CONTEXT = ssl.create_default_context(cafile=certifi.where())
MY_LAT = 38.705980
MY_LONG = -77.023360

def datetime_from_utc_to_local(utc_datetime):
    now_time = t.time()
    offset = datetime.fromtimestamp(now_time) - datetime.utcfromtimestamp(now_time)
    return utc_datetime + offset

def is_dark():
    parameters = {
        "lat": MY_LAT,
        "lng": MY_LONG,
        "formatted": 0
    }
    response = requests.get(url="https://api.sunrise-sunset.org/json", params=parameters)
    response.raise_for_status()
    data = response.json()
    sunrise = isoparse(data["results"]["sunrise"])
    sunset = isoparse(data["results"]["sunset"])
    # Convert from UTC to Local
    sunrise = datetime_from_utc_to_local(sunrise).hour
    sunset = datetime_from_utc_to_local(sunset).hour
    time_now = datetime.now().hour
    if time_now > sunset or time_now < sunrise:
        return True
    else:
        return False

def iss_overhead():
    response1 = requests.get(url="http://api.open-notify.org/iss-now.json")
    response1.raise_for_status()
    data1 = response1.json()
    iss_latitude = float(data1["iss_position"]["latitude"])
    iss_longitude = float(data1["iss_position"]["longitude"])
    if MY_LAT-5 <= iss_latitude <= MY_LAT+5 and MY_LONG-5 <= iss_longitude<= MY_LONG<=5:
        return True
    else:
        return False

while True:
    time.sleep(60)
    if is_dark() and iss_overhead():
        with smtplib.SMTP_SSL('smtp.gmail.com', 465, context=CONTEXT) as connection:
            connection.login(MY_EMAIL, PASSWORD)
            connection.sendmail(
                from_addr=MY_EMAIL,
                to_addrs="evan.e.welty@gmail.com",
                msg=f"Subject: LOOK UP\n\nISS is above you in the sky")





